From 734773297fb054ec222d5d675d93289e935a5737 Mon Sep 17 00:00:00 2001
From: Pantelis Antoniou <panto@antoniou-consulting.com>
Date: Wed, 9 Jan 2013 14:39:22 +0200
Subject: [PATCH 057/103] am33xx_tsc_adc: DTify all the drivers

Incorporate the DT changes required to get this to work.

Signed-off-by: Pantelis Antoniou <panto@antoniou-consulting.com>
---
 drivers/iio/adc/ti_am335x_adc.c           | 25 ++++++++++--
 drivers/input/touchscreen/ti_am335x_tsc.c | 64 +++++++++++++++++++++++++------
 drivers/mfd/ti_am335x_tscadc.c            | 36 ++++++++++++++---
 3 files changed, 104 insertions(+), 21 deletions(-)

diff --git a/drivers/iio/adc/ti_am335x_adc.c b/drivers/iio/adc/ti_am335x_adc.c
index 9d8535f..8e68a44 100644
--- a/drivers/iio/adc/ti_am335x_adc.c
+++ b/drivers/iio/adc/ti_am335x_adc.c
@@ -24,6 +24,8 @@
 #include <linux/iio/machine.h>
 #include <linux/iio/driver.h>
 #include <linux/regmap.h>
+#include <linux/of.h>
+#include <linux/of_device.h>
 
 #include <linux/io.h>
 #include <linux/mfd/ti_am335x_tscadc.h>
@@ -185,11 +187,18 @@ static int tiadc_probe(struct platform_device *pdev)
 	struct iio_dev		*indio_dev;
 	struct tiadc_device	*adc_dev;
 	struct ti_tscadc_dev	*tscadc_dev = pdev->dev.platform_data;
-	struct mfd_tscadc_board	*pdata;
+	struct mfd_tscadc_board	*pdata = NULL;
+	struct device_node	*node = NULL;
 	int			err;
+	u32			val;
 
-	pdata = tscadc_dev->dev->platform_data;
-	if (!pdata || !pdata->adc_init) {
+	if (tscadc_dev->dev->of_node)
+		node = of_get_child_by_name(
+			tscadc_dev->dev->of_node, "adc");
+	else
+		pdata = tscadc_dev->dev->platform_data;
+
+	if (!pdata && !node) {
 		dev_err(&pdev->dev, "Could not find platform data\n");
 		return -EINVAL;
 	}
@@ -203,7 +212,15 @@ static int tiadc_probe(struct platform_device *pdev)
 	adc_dev = iio_priv(indio_dev);
 
 	adc_dev->mfd_tscadc = tscadc_dev;
-	adc_dev->channels = pdata->adc_init->adc_channels;
+	if (node) {
+		err = of_property_read_u32(node, "adc-channels", &val);
+		if (err < 0) {
+			dev_err(&pdev->dev, "no adc-channels property\n");
+			goto err_free_device;
+		}
+		adc_dev->channels = val;
+	} else
+		adc_dev->channels = pdata->adc_init->adc_channels;
 
 	indio_dev->dev.parent = &pdev->dev;
 	indio_dev->name = dev_name(&pdev->dev);
diff --git a/drivers/input/touchscreen/ti_am335x_tsc.c b/drivers/input/touchscreen/ti_am335x_tsc.c
index 5fbcaae..32be461 100644
--- a/drivers/input/touchscreen/ti_am335x_tsc.c
+++ b/drivers/input/touchscreen/ti_am335x_tsc.c
@@ -27,6 +27,8 @@
 #include <linux/input/ti_am335x_tsc.h>
 #include <linux/delay.h>
 #include <linux/regmap.h>
+#include <linux/of.h>
+#include <linux/of_device.h>
 
 #include <linux/mfd/ti_am335x_tscadc.h>
 
@@ -403,12 +405,18 @@ static int titsc_probe(struct platform_device *pdev)
 	struct titsc *ts_dev;
 	struct input_dev *input_dev;
 	struct ti_tscadc_dev *tscadc_dev = pdev->dev.platform_data;
-	struct mfd_tscadc_board	*pdata;
-	int err;
-
-	pdata = tscadc_dev->dev->platform_data;
-
-	if (!pdata) {
+	int err, i;
+	struct mfd_tscadc_board	*pdata = NULL;
+	struct device_node *node = NULL;
+	u32 val, wires_conf[4];
+
+	if (tscadc_dev->dev->of_node)
+		node = of_get_child_by_name(
+			tscadc_dev->dev->of_node, "tsc");
+	else
+		pdata = tscadc_dev->dev->platform_data;
+
+	if (!pdata && !node) {
 		dev_err(&pdev->dev, "Could not find platform data\n");
 		return -EINVAL;
 	}
@@ -426,11 +434,45 @@ static int titsc_probe(struct platform_device *pdev)
 	ts_dev->mfd_tscadc = tscadc_dev;
 	ts_dev->input = input_dev;
 	ts_dev->irq = tscadc_dev->irq;
-	ts_dev->wires = pdata->tsc_init->wires;
-	ts_dev->x_plate_resistance = pdata->tsc_init->x_plate_resistance;
-	ts_dev->steps_to_configure = pdata->tsc_init->steps_to_configure;
-	memcpy(ts_dev->config_inp, pdata->tsc_init->wire_config,
-			sizeof(pdata->tsc_init->wire_config));
+	if (node) {
+		err = of_property_read_u32(node, "wires", &val);
+		if (err < 0) {
+			dev_err(&pdev->dev, "no wires property\n");
+			goto err_free_mem;
+		}
+		ts_dev->wires = val;
+
+		err = of_property_read_u32(node, "x-plate-resistance", &val);
+		if (err < 0) {
+			dev_err(&pdev->dev, "no x-plate-resistance property\n");
+			goto err_free_mem;
+		}
+		ts_dev->x_plate_resistance = val;
+
+		err = of_property_read_u32(node, "steps-to-configure", &val);
+		if (err < 0) {
+			dev_err(&pdev->dev, "no steps-to-configure property\n");
+			goto err_free_mem;
+		}
+		ts_dev->steps_to_configure = val;
+
+		err = of_property_read_u32_array(node, "wire-config",
+				wires_conf, ARRAY_SIZE(wires_conf));
+		if (err < 0) {
+			dev_err(&pdev->dev, "no wire-config property\n");
+			goto err_free_mem;
+		}
+		for (i = 0; i < ARRAY_SIZE(wires_conf); i++)
+			ts_dev->config_inp[i] = wires_conf[i];
+	} else {
+		ts_dev->wires = pdata->tsc_init->wires;
+		ts_dev->x_plate_resistance =
+			pdata->tsc_init->x_plate_resistance;
+		ts_dev->steps_to_configure =
+			pdata->tsc_init->steps_to_configure;
+		memcpy(ts_dev->config_inp, pdata->tsc_init->wire_config,
+				sizeof(pdata->tsc_init->wire_config));
+	};
 
 	err = request_irq(ts_dev->irq, titsc_irq,
 			  0, pdev->dev.driver->name, ts_dev);
diff --git a/drivers/mfd/ti_am335x_tscadc.c b/drivers/mfd/ti_am335x_tscadc.c
index 613adb2..d3d9f41 100644
--- a/drivers/mfd/ti_am335x_tscadc.c
+++ b/drivers/mfd/ti_am335x_tscadc.c
@@ -22,6 +22,8 @@
 #include <linux/regmap.h>
 #include <linux/mfd/core.h>
 #include <linux/pm_runtime.h>
+#include <linux/of.h>
+#include <linux/of_device.h>
 
 #include <linux/mfd/ti_am335x_tscadc.h>
 #include <linux/input/ti_am335x_tsc.h>
@@ -65,21 +67,36 @@ static	int ti_tscadc_probe(struct platform_device *pdev)
 	struct resource		*res;
 	struct clk		*clk;
 	struct mfd_tscadc_board	*pdata = pdev->dev.platform_data;
+	struct device_node	*node;
 	struct mfd_cell		*cell;
 	int			err, ctrl;
 	int			clk_value, clock_rate;
 	int			tsc_wires = 0, adc_channels = 0, total_channels;
+	u32			val;
 
-	if (!pdata) {
+	if (!pdata && !pdev->dev.of_node) {
 		dev_err(&pdev->dev, "Could not find platform data\n");
 		return -EINVAL;
 	}
 
-	if (pdata->adc_init)
-		adc_channels = pdata->adc_init->adc_channels;
-
-	if (pdata->tsc_init)
-		tsc_wires = pdata->tsc_init->wires;
+	if (pdev->dev.of_node) {
+		node = of_get_child_by_name(pdev->dev.of_node, "tsc");
+		if (of_property_read_u32(node, "wires", &val) == 0)
+			tsc_wires = val;
+		of_node_put(node);
+
+		node = of_get_child_by_name(pdev->dev.of_node, "adc");
+		if (of_property_read_u32(node, "adc-channels", &val) == 0)
+			adc_channels = val;
+		of_node_put(node);
+		node = NULL;
+	} else {
+		if (pdata->tsc_init)
+			tsc_wires = pdata->tsc_init->wires;
+
+		if (pdata->adc_init)
+			adc_channels = pdata->adc_init->adc_channels;
+	}
 
 	total_channels = tsc_wires + adc_channels;
 
@@ -271,11 +288,18 @@ static const struct dev_pm_ops tscadc_pm_ops = {
 #define TSCADC_PM_OPS NULL
 #endif
 
+static const struct of_device_id ti_tscadc_dt_ids[] = {
+	{ .compatible = "ti,ti-tscadc", },
+	{ },
+};
+
+
 static struct platform_driver ti_tscadc_driver = {
 	.driver = {
 		.name   = "ti_tscadc",
 		.owner	= THIS_MODULE,
 		.pm	= TSCADC_PM_OPS,
+		.of_match_table = of_match_ptr(ti_tscadc_dt_ids),
 	},
 	.probe	= ti_tscadc_probe,
 	.remove	= ti_tscadc_remove,
-- 
1.8.1

